<UserControl x:Class="SIGame.PersonView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:lb="clr-namespace:SIGame.Behaviors"
             xmlns:localc="clr-namespace:SIGame.Converters"
             xmlns:uib="clr-namespace:SIUI.Behaviors;assembly=SIUI"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:lp="clr-namespace:SIGame.Properties"
             xmlns:l="clr-namespace:SIGame"
             mc:Ignorable="d" Name="root"
             d:DesignHeight="300" d:DesignWidth="206">
    <UserControl.Resources>
        <LinearGradientBrush x:Key="Gradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#232323" Offset="0" />
            <GradientStop Color="#010312" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="GradientRev" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#232323" Offset="1" />
            <GradientStop Color="#010312" Offset="0" />
        </LinearGradientBrush>

        <Style x:Key="PersonTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="3,1" />
            <Setter Property="uib:FillManager.Fill" Value="True" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="pack://application:,,,/SIGame;component/Resources/#ITC Conduit Cyrillic" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Sum}" Value="{x:Null}">
                    <!-- Showman -->
                    <Setter Property="Foreground" Value="LightGreen" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsConnected}" Value="False">
                    <Setter Property="Foreground" Value="Gray" />
                </DataTrigger>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource Equals}">
                            <Binding Path="Name" />
                            <Binding RelativeSource="{RelativeSource AncestorType=l:Studia}" Path="DataContext.Data.Name" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Foreground" Value="{StaticResource MainColor}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="sumTB" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PersonTextStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Sum}" Value="{x:Null}">
                    <Setter Property="Opacity" Value="0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="nonShowman" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource Gradient}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Sum}" Value="{x:Null}">
                    <Setter Property="Background" Value="{x:Null}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="nonShowmanRev" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource GradientRev}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Sum}" Value="{x:Null}">
                    <Setter Property="Background" Value="{x:Null}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="stakeBorder" TargetType="Border" BasedOn="{StaticResource nonShowman}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Stake}" Value="0">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Stake}" Value="-2">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Stake}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="stakeTB" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PersonTextStyle}">
            <Setter Property="Foreground" Value="#ffa000" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding SafeStake}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource MainColor}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <localc:SexConverter x:Key="SexConverter" />
        <localc:IsBeforeGameConverter x:Key="ReadyConverter" />
        <localc:AuctionStakesConverter x:Key="AuctionStakes" />
        <localc:RowHeightConverter x:Key="RowHeightConverter" />

        <Style x:Key="ReadyStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource Gradient}" />
            <Setter Property="Opacity" Value="0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Ready}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ReadyButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SIButton}">
            <Setter Property="Visibility" Value="{Binding GameStarted, Converter={StaticResource ReadyConverter}, ConverterParameter=True}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Ready}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding BeReadyCommand}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="UnReadyButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SIButton}">
            <Setter Property="Visibility" Value="{Binding GameStarted, Converter={StaticResource ReadyConverter}, ConverterParameter=True}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Ready}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding BeUnReadyCommand}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="area" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding InGame}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ReplicText" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Text" Value="{Binding Replic}" />
            <Setter Property="Margin" Value="10" />
        </Style>

        <localc:GreaterThanConverter x:Key="GreaterThan" />
        <localc:Multiplier x:Key="Multiplier" />
        <localc:ChangeTypeConverter x:Key="ChangeTypeConverter" />
        <localc:ReverseTimeConverter x:Key="ReverseTimeConverter" />

        <Style x:Key="ReplicBorder" TargetType="Border">
            <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource Multiplier}, ConverterParameter=0.96}" />
            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource Multiplier}, ConverterParameter=0.5}" />
            <Setter Property="Canvas.Left" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource Multiplier}, ConverterParameter=-0.254}" />
            <Setter Property="Canvas.Top" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource Multiplier}, ConverterParameter=-0.08}" />
            <Setter Property="Opacity" Value="0.0" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Background" Value="Lavender" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsShowman}" Value="True">
                    <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource Multiplier}, ConverterParameter=1.05}" />
                    <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource Multiplier}, ConverterParameter=0.65}" />
                    <Setter Property="Canvas.Top" Value="{x:Static sys:Double.NaN}" />
                    <Setter Property="Canvas.Left" Value="0" />
                    <Setter Property="Canvas.Bottom" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource Multiplier}, ConverterParameter=-0.65}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Replic.Length, Mode=OneWay, Converter={StaticResource GreaterThan}, ConverterParameter=0}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1.0" Duration="00:00:00.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:00.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Style="{StaticResource area}">
        <Grid.RowDefinitions>
            <RowDefinition Height="35*" />
            <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight, Converter={StaticResource RowHeightConverter}}" />
            <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight, Converter={StaticResource RowHeightConverter}}" />
            <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight, Converter={StaticResource RowHeightConverter}}" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="15*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Button Grid.Column="1">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid>
                            <Image Name="image" lb:ImageLoader.ImageSource="{Binding}" Stretch="Uniform" />
                            <Rectangle Width="15" Height="15" Fill="{StaticResource MainColor}" Stroke="Black" Margin="0,0,-1,-1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="{Binding IsChooser, Converter={StaticResource BooleanToVisibilityConverter1}}" />
                            <ProgressBar VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="-1,-12,-1,0" Height="10" Foreground="Blue"
                                         Minimum="0" Maximum="100"
                                         Value="{Binding Mode=OneWay, RelativeSource={RelativeSource AncestorType=l:Studia, AncestorLevel=1,Mode=FindAncestor}, Path=DataContext.Timers[2].Time, Converter={StaticResource ReverseTimeConverter}}"
                                         Visibility="{Binding IsDeciding, Converter={StaticResource BooleanToVisibilityConverter1}, Delay=500}">
                            </ProgressBar>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="image" Property="ActualWidth" Value="0">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="border" Property="VerticalAlignment" Value="Stretch" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Command" Value="{Binding Select}" />
                    <Setter Property="BorderBrush" Value="#FF111111" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding State}" Value="Press">
                            <Setter Property="BorderBrush" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Lost">
                            <Setter Property="BorderBrush" Value="#FFF7820C" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Right">
                            <Setter Property="BorderBrush" Value="Lime" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Wrong">
                            <Setter Property="BorderBrush" Value="DarkRed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="HasAnswered">
                            <Setter Property="BorderBrush" Value="DarkViolet" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State}" Value="Pass">
                            <Setter Property="BorderBrush" Value="Gray" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CanBeSelected}" Value="True">
                            <Setter Property="BorderBrush" Value="Cyan" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CanBeSelected}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="Orange" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,-30,0,0" Width="30" Height="30"
                ToolTip="{x:Static lp:Resources.Management}" BorderThickness="0" Background="#66555555">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource SIButtonSimple}">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding GameStarted}" Value="False" />
                                <Condition Binding="{Binding IsExtendedMode}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <lb:DropDownBehavior.DropDown>
                <ContextMenu>
                    <MenuItem Header="{Binding IsHuman, Converter={StaticResource ChangeTypeConverter}}" Command="{Binding ChangeType}" CommandParameter="{Binding}" />
                    <MenuItem Header="{x:Static lp:Resources.ReplaceTo}" IsEnabled="{Binding Replace.CanBeExecuted}" ItemsSource="{Binding Others}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Command" Value="{Binding DataContext.Replace, RelativeSource={RelativeSource AncestorType=MenuItem}}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="{x:Static lp:Resources.Free}" Command="{Binding Free}" CommandParameter="{Binding}" />
                    <MenuItem Header="{x:Static lp:Resources.DeleteTable}" Command="{Binding Delete}" CommandParameter="{Binding}" Visibility="{Binding Command,RelativeSource={RelativeSource Self}, Converter={StaticResource NotNullToVisibilityConverter1}}" />
                </ContextMenu>
            </lb:DropDownBehavior.DropDown>
            <Button.Content>
                <Path Fill="{StaticResource MainColor}" Margin="5" Stretch="Uniform" Data="M 27.5314,21.8628L 33.0126,19.4224L 34.7616,23.3507C 36.6693,22.9269 38.6044,22.8903 40.4668,23.2026L 42.0083,19.1868L 47.6098,21.337L 46.0683,25.3528C 47.6612,26.3669 49.0747,27.6889 50.2088,29.2803L 54.1371,27.5313L 56.5776,33.0126L 52.6493,34.7616C 53.0731,36.6693 53.1097,38.6043 52.7974,40.4668L 56.8131,42.0083L 54.6629,47.6097L 50.6472,46.0683C 49.6331,47.6613 48.3111,49.0748 46.7197,50.2089L 48.4686,54.1372L 42.9874,56.5776L 41.2384,52.6493C 39.3307,53.0731 37.3957,53.1097 35.5333,52.7974L 33.9918,56.8131L 28.3903,54.6629L 29.9318,50.6472C 28.3388,49.6331 26.9252,48.3111 25.7911,46.7196L 21.8628,48.4686L 19.4224,42.9873L 23.3507,41.2383C 22.9269,39.3307 22.8903,37.3957 23.2026,35.5332L 19.1869,33.9918L 21.3371,28.3903L 25.3528,29.9318C 26.3669,28.3388 27.6889,26.9252 29.2804,25.7911L 27.5314,21.8628 Z M 34.3394,29.7781C 29.7985,31.7998 27.7564,37.1198 29.7781,41.6606C 31.7998,46.2015 37.1198,48.2436 41.6606,46.2219C 46.2015,44.2002 48.2436,38.8802 46.2219,34.3394C 44.2002,29.7985 38.8802,27.7564 34.3394,29.7781 Z "/>
            </Button.Content>
        </Button>
        <Border Grid.Row="1" Grid.ColumnSpan="3" Background="{StaticResource Gradient}" Margin="3">
            <TextBlock Style="{StaticResource PersonTextStyle}" Text="{Binding Name}" TextWrapping="Wrap" />
        </Border>
        <Border Grid.Row="2" Grid.ColumnSpan="3" Style="{StaticResource nonShowmanRev}" Margin="3,2" Visibility="{Binding GameStarted, Converter={StaticResource ReadyConverter}, ConverterParameter=False}">
            <TextBlock Style="{StaticResource sumTB}" Text="{Binding Sum}" />
        </Border>
        <Border Grid.Row="2" Grid.ColumnSpan="3" Style="{StaticResource ReadyStyle}" Margin="3,2"
                       Visibility="{Binding GameStarted, Converter={StaticResource ReadyConverter}, ConverterParameter=True}">
            <DockPanel>
                <Button DockPanel.Dock="Right" Style="{StaticResource UnReadyButton}" Padding="5" Margin="0"
                    VerticalAlignment="Center" HorizontalAlignment="Right" ToolTip="{x:Static lp:Resources.CancelReady}"
                    Width="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}"
                    Command="{Binding BeUnReadyCommand}" Background="#AA555555">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <Path Data="M0,0L1,1M0,1L1,0" Stretch="Fill" Stroke="{StaticResource MainColor}" />
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <ContentControl>
                    <TextBlock Style="{StaticResource PersonTextStyle}" Text="{Binding IsMale,ConverterParameter=Ready,Converter={StaticResource SexConverter}}"
                       uib:FillManager.Fill="True" />
                </ContentControl>
            </DockPanel>
        </Border>

        <Button Grid.Row="2" Grid.ColumnSpan="3" FontSize="25" Style="{StaticResource ReadyButton}" Padding="0"
                Command="{Binding BeReadyCommand}" Background="#AA555555"
                Content="{Binding IsMale,ConverterParameter=Ready,Converter={StaticResource SexConverter}}" />

        <Border Grid.Row="3" Grid.ColumnSpan="3" Style="{StaticResource stakeBorder}" Margin="3">
            <TextBlock Style="{StaticResource stakeTB}" Text="{Binding Stake, Converter={StaticResource AuctionStakes}}" />
        </Border>
        
        <Canvas>
            <Border Style="{StaticResource ReplicBorder}" BorderBrush="Gray" BorderThickness="1" CornerRadius="10" Effect="{StaticResource Effect}">
                <TextBlock uib:FillManager.Fill="True" uib:FillManager.MaxFontSize="26" Style="{StaticResource ReplicText}" />
            </Border>
        </Canvas>
    </Grid>
</UserControl>
